## Use template from "https://github.com/zhao-lin-li/project_template_with_containers" to start
   a new project.

# In order to build a docker container, the files "Dockerfile" and "docker-compose.yml" are
  needed.

# To build an image based on the Dockerfile:
(project_dir)$ sudo docker build .

** To build an image based on the Dockerfile with a tag:
(project_dir)$ sudo docker build -t (tag_name) .

** If you're getting the error message, "Temporary failure resolving 'xxxxxxxxxx', the DNS
   servers might be blocked by your company.  (Solution from
   https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/).

   Step 1, find out the primary and secondary DNS server addresses:
   (home)$ nmcli dev show | grep 'IP4.DNS'

   Step 2, create a file "/etc/docker/daemon.json", save the following code inside the file.
   Replace "(IP4.DNS[1])" and "(IP4.DNS[2])" with the DNS server addresses found in Step 1,
   then restart all terminals:
   (home)$ sudo vi /etc/docker/daemon.json

   {                                                                          
      "dns": ["(IP4.DNS[1])", "(IP4.DNS[2])"]                                                                           
   } 

   Step 3, restart docker.  Then build the image again from scratch:
   (project_dir)$ sudo service docker restart
   (project_dir)$ sudo docker build --no-cache .

** If you're getting the error message, "ERROR: Couldn't connect to Docker daemon at 
   http+docker://localunixsocket - is it running?  If it's at a non-standard location, specify
   the URL with the DOCKER_HOST environment variable.":
   (project_dir)$ sudo service docker restart

# To use the docker container based on the "docker-compose.yml" file w/ bash:
  (project_dir)$ sudo docker-compose run (container_name (first_line_under_"services")) bash

# To remove docker image:
(project_dir)$ sudo docker rmi (image_id)


## USEFUL COMMANDS ##

# To start a container with assigned name in the background with the -d flag:
$ docker container run -d --name <container_name> <image:version> <command_run inside_container>

# To start a container and then launch a bash shell:
$ docker container run -it <image:version> bash

# To launch a bash shell in a running container:
$ docker container exec -it <container ID> bash

# To list all the running and exited containers:
$ docker container ls -a

# To run command in a running container:
$ docker container exec <container ID> <command_run inside_container>

# To display the PID of the processes inside container:
$ docker container top <container ID>

# To restart an exited container:
$ docker container start <container ID>

# To generate logs from the PID 1 process in a container:
$ docker container logs <container ID>

# To display only the last 5 lines of log generated from the PID 1 process in a container:
$ docker container logs --tail 5 <container ID>

# To watch the logs of the PID 1 process in the container as they are generated:
$ docker container logs -f <container ID>

# To inspect the container:
$ docker container inspect <container ID> | grep <words_to_look_for>

# To stop a container:
$ docker container stop <container ID>

# To delete container:
$ docker container rm -f <container ID>

# To see the changes to the image for a container:
$ docker container diff <container ID>

# To commit the changes to the image for the container:
$ docker container commit <container ID> <image:version>

# To list all the images:
$ docker image ls

# To see the history of an image:
$ docker image history <image_name>

# To build image w/ tag based on Dockerfile:
$ docker image build -t <tag_name> .

# To run container based on Dockerfile that has a CMD or ENTRYPOINT+CMD command:
$ docker container run <image:version>

# To run container based on Dockerfile that has only CMD and overwritting the CMD command:
$ docker container run <image:version> <command_run_inside_container_that overwrites_CMD_command>

# To run container based on Dockerfile that has ENTRYPOINT but no/replacing CMD default
  parameter:
$ docker container run <image:version> <default_parameter_for_ENTRYPOINT_command>
